# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.105.0"

default_platform :ios

platform :ios do
  before_all do
    # https://afterlogic.slack.com/apps/A0F7XDUAZ-incoming-webhooks - ссылка на подключение вебхука
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    xcode_select = "/Applications/Xcode.app"
    # cocoapods
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Run snapshot only"
  lane :screenshots do 
    snapshot
  end

  def change_log_since_last_tag
    # http://git-scm.com/docs/pretty-formats
    # <short hash> <commit title>
    return changelog_from_git_commits(pretty: '%h %s')
  end

  def version_string(version_number, build_number)
    "#{version_number} (#{build_number})"
  end

  def tag_name(build_type, version_number, build_number)
    "#{build_type}/#{version_number}/#{build_number}"
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :uploadBeta do |options|


    # Проверка на наличие незакоментированных изменений
    # ensure_git_status_clean

    version_number = options[:version_number]

    # Увеличивает номер версии
    # Указывать путь до проекта не обязательно
    # increment_version_number(version_number: version_number, xcodeproj: "aurorafiles.xcodeproj")

    # Увеличивает номер билда (не версию)
    # Указывать путь до проекта не обязательно
    build_number = increment_build_number


    complete_version_number = version_string(version_number, build_number)

    # Добавляем гит тэг для билда. Имя гит-тэга такое же как и называние лэйна
    add_git_tag(
        grouping: "debug-builds",
        prefix: "au",
        build_number: build_number
    )

    commit_version_bump(
      message: "Version bump to #{complete_version_number}",
      xcodeproj: "aurorafiles.xcodeproj"
    )

    clean_build_artifacts
    clear_derived_data


    # забираем все коммиты из гита для ченджлога
    change_log = "CHANGELOG TBD. Version: #{complete_version_number} \nChanges:\n  #{change_log_since_last_tag}"
    
    # Пушим в гит новый тэг и все коммиты
    push_to_git_remote

    # Собираем билд
    gym(scheme: "aurorafiles", workspace: "aurorafiles.xcworkspace",include_bitcode: true) 

    #pilot

    # отправляем в тестфлайт
    testflight(
      changelog: change_log,
      skip_submission: true
    )

    #отправляем кастомное сообщение в слак
    MrHandyMessage(slackMessage:"Submitted build to TestFlight: \n #{change_log} \n")

  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "aurorafiles") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  desc "send message to slack"
  lane :MrHandyMessage do |options|
    #отправляем сообщение в слак
    slack(
      message: options[:slackMessage],
      channel: "#iosdev",
      use_webhook_configured_username_and_icon: false,
      username: "Mr.Handy from Fastlane",
      icon_url:"http://vignette2.wikia.nocookie.net/fallout/images/3/39/FoS_Mister_Handy.png/revision/latest?cb=20150904224359"
    )
  end

  desc "Fake upload. Only for tests!!!"
  lane :fakeUpload do |options|

    version_number = options[:version_number]

    build_number = increment_build_number


    complete_version_number = version_string(version_number, build_number)

    clean_build_artifacts
    clear_derived_data

    # забираем все коммиты из гита для ченджлога
    change_log = "CHANGELOG TBD. Version: #{complete_version_number} \nChanges:\n  #{change_log_since_last_tag}"

    #отправляем сообщение в слак
    MrHandyMessage(slackMessage:"Test Message. Submitted build to TestFlight: \n#{change_log}\n")
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer


#test lanes

